import { FullLayoutComponent } from './full-layout.component';
import { AuthGuardService } from './shared/sdk/services/core/auth-guard';
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpModule } from '@angular/http';
import { SDKBrowserModule } from './shared/sdk';
import { routing} from './app.routing'
import { AppComponent } from './app.component';
import { ModalModule,AlertModule } from 'ngx-bootstrap';
import { SIDEBAR_TOGGLE_DIRECTIVES } from './sharedLayout/sidebar.directive';
import { AsideToggleDirective } from './sharedLayout/aside.directive';
import { BreadcrumbsComponent } from './sharedLayout/breadcrumb.component';
import { NAV_DROPDOWN_DIRECTIVES } from './sharedLayout/nav-dropdown.directive';
import { LoginComponent } from './myComponents/login/login';
import { RegisterComponent } from './myComponents/signup/signup';
<% for (var count = 0 ; count <  model_schema.length ; count++){ for(var check =0 ;check < relation_schema.length; check++){ if ((relation_schema[check].modelName == model_schema[count].name.toLowerCase()) && relation_schema[check].operations.createOperation == true){%>
 import { <%= model_schema[count].name %>Component } from './myComponents/<%= model_schema[count].name %>Component/<%= model_schema[count].name%>.component';<%} if ((relation_schema[check].modelName == model_schema[count].name.toLowerCase()) && relation_schema[check].operations.readOperation == true){%>
 import { <%= model_schema[count].name %>ComponentListing } from './myComponents/<%= model_schema[count].name %>ListingComponent/<%= model_schema[count].name%>.listing.component';
 <%}}}%>
@NgModule({
  declarations: [
    AppComponent,
    NAV_DROPDOWN_DIRECTIVES,
    BreadcrumbsComponent,
    SIDEBAR_TOGGLE_DIRECTIVES,
    AsideToggleDirective,
    LoginComponent,
    RegisterComponent,
    FullLayoutComponent,
    <% for (var count = 0 ; count <  model_schema.length ; count++){ for(var check =0 ;check < relation_schema.length; check++){ if ((relation_schema[check].modelName == model_schema[count].name.toLowerCase()) && relation_schema[check].operations.createOperation == true){%>
    <%= model_schema[count].name %>Component,<%} if ((relation_schema[check].modelName == model_schema[count].name.toLowerCase()) && relation_schema[check].operations.readOperation == true){%>
    <%= model_schema[count].name %>ComponentListing,
    <%}}}%>
    
  ],
  imports: [
    BrowserModule,
    FormsModule,
    HttpModule,
    routing,
    SDKBrowserModule.forRoot(),
    ModalModule.forRoot(),
    AlertModule.forRoot()
  ],
  providers: [AuthGuardService],
  bootstrap: [AppComponent]
})
export class AppModule { }
